#!/usr/bin/env bash

# Colors for output
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
GRAY='\033[0;37m'
EC='\033[0m' # end color

exclude() {
    directory="$1"
    excluded_directories_filename="$2"

    if [[ ! -f "$excluded_directories_filename" ]]; then
        return 1
    fi

    while read -r excluded_directory
    do
        if [[ "$directory" = "${excluded_directory}/" ]] || [[ "$directory" = "$excluded_directory}" ]];
        then
            return 0
        fi
    done < "$excluded_directories_filename"

    return 1
}

usage() {
cat <<HERE
usage: git all <any git command (i.e. status, pull etc.)> <parameters to that command>  # execute git command in all repositories in current directory  
   or: git all clone <filename>                                                         # clone all repositories listed in file to current directory
HERE
}

clone() {
    repositories_file_filename="$1"

    if [[ -z "$repositories_file_filename" ]]; then
        echo "clone requires filename with list of repositories!"
        exit 1
    fi

    if [[ ! -f "$repositories_file_filename" ]]; then
        echo "file ${repositories_file_filename} does not exist!"
        exit 1
    fi

    while read -r clone_params
    do
        echo -e "${BLUE}$ ${GRAY}git clone${EC} "$clone_params""
        git clone $clone_params
        echo
    done < "$repositories_file_filename"
}

main() {
    errors=()

    for directory in */
    do
        # Exclude .gitallexcluded listed files
        if exclude "$directory" .gitallexcluded; then
            continue
        fi

        # Exclude non-git repositories folders
        if ! git -C "$directory" rev-parse > /dev/null 2>&1; then
            continue
        fi

        cd "$directory" || (echo "Could not change directory!" && exit)

        echo -e "${BLUE}$ ${GRAY}cd${EC} ${directory%/}"
        echo -e "${BLUE}$ ${GRAY}git${EC} $@"

        if ! git $@; then
            errors+=("${directory%/}")
        fi

        cd ..
        echo
    done

    if [[ -n "$errors" ]]; then
        echo -e "${YELLOW}WARNING! ${GRAY}Non-zero code returned while executing${EC} 'git $@' ${GRAY}in the following repositories:"

        for repository in ${errors[@]}
        do
            echo -e "${GRAY}*${EC} $repository"
        done

        exit 1
    fi

    exit 0
}

case $1 in
    -h|"")
        usage
        exit 0
        ;;
    clone)
        clone $2
        exit 0
        ;;
    *)
        main $@
        ;;
esac
